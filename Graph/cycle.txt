//============================================================================
// Name        : cycle.cpp
// Author      : Rahul (ATS)
// Version     : 2.0
// cpp version : c++ 14
// Copyright   : Everyone can freely use and distribute it.
// Description : To detect cycle in the graph. 
//             : https://en.wikipedia.org/wiki/Cycle_(graph_theory)
//============================================================================

// There are many ways to find cycle in a graph. 

// few of them are listed. 

// Idea is to use DFS algorithm to detects cycle. 
// while doing DFS, if we visit the any node that is already visited
// then graph  contains cycle.


// second thing, we can use the idea of graph and tree. 
// A tree has exactly N-1 edges, where N is the number of nodes in the tree. 
// If a graph does not contains any cycle, then it must be a tree. 
// simply count the number of edges in the graph say 'numEdge' 
// if numEdge==N-1 then graph does not containg any cycle, otherwise it contains cycle. 

// We can detect  cycle in graph using disjoint sets. 

// weki pedia
// Also, if a directed graph has been divided into strongly connected components,
//  cycles only exist within the components and not between them, 
//  since cycles are strongly connected.

// For directed graphs, distributed message based algorithms can be used. 
// These algorithms rely on the idea that a message sent by a vertex in a cycle 
// will come back to itself. Distributed cycle detection algorithms are
//  useful for processing large-scale graphs using a distributed graph
//   processing system on a computer cluster (or supercomputer).


// application
// Applications of cycle detection include the use of wait-for graphs to detect deadlocks
//  in concurrent systems.[6]

